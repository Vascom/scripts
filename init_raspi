#!/bin/bash

yd_remote_directory="/home/vascom/yandex.disk/"
yd_pid_file="/var/run/mount.davfs/home-vascom-yandex.disk.pid"
cd_pid_file="/var/run/chronyd.pid"
cronyd_delay=10

dev_sda1="/dev/disk/by-uuid/7a1bd51b-00d9-4c1c-88d0-9e987097af4e"
dev_sdb1="/dev/disk/by-uuid/acdb5d2e-3a7e-435f-ad53-e999a4723b51"
sda1_mountpoint="/home/vascom/sda1"
sdb1_mountpoint="/home/vascom/sdb1"
sda1_mounted="$sda1_mountpoint/downloads"

function yandex_disk_check() {
    if [ ! -e $yd_remote_directory/Documents/ ]
    then
        if [ -e $yd_pid_file ]
        then
            sudo rm -rf $yd_pid_file
        fi
        sudo systemctl start home-vascom-yandex.disk.mount
        echo "yandex.disk mounted"
    fi
}

function chronyd_check(){
    chrony_status=`systemctl status chronyd | grep failed -c`
    if [ $chrony_status -ne 0 ]
    then
        sudo rm -f $cd_pid_file
        sudo systemctl restart chronyd
        echo "chronyd restarted"
        sleep $cronyd_delay
    fi
}

function disks_mount_check(){
    if [ -e $dev_sdb1 ]
    then
        sudo mount $dev_sdb1 $sdb1_mountpoint
        echo "sdb1 mounted"
    fi

    if [ -e $dev_sda1 ]
    then
        if [ ! -e $sda1_mounted ]
        then
            sudo mount $dev_sda1 $sda1_mountpoint
            sudo mount --bind $sda1_mountpoint/downloads downloads/
            sudo mount --bind downloads/ /var/www/lighttpd/downloads
            sudo mount --bind downloads/ /var/ftp/downloads/
            echo "sda1 mounted"
        else
            echo "sda1 already mounted"
        fi
    else
        echo "Error: sda1 not connected"
    fi
}

function ftp_check(){
    ftp_status=`ps aux | grep pure-ftpd -c`
    if [ $ftp_status -lt 2 ]
    then
        sudo pure-ftpd -4 -c 10 -C 5 -i -l unix -p 50000:60000 -P vascom.myftp.org -S 8021 -B
    #     sudo pure-ftpd --ipv4only --maxclientsnumber 10 --maxclientsperip 5 --anonymouscantupload \
    #     -login unix --passiveportrange 50000:60000 --forcepassiveip vascom.myftp.org --bind 8021 --daemonize
        echo "FTP started"
    fi
}

function nfs_check(){
    nfs_status=`systemctl status nfs | grep failed -c`
    if [ $nfs_status -eq 1 ]
    then
        sudo systemctl start nfs
        echo "NFS started"
    fi
}

chronyd_check
yandex_disk_check
disks_mount_check
ftp_check
nfs_check
