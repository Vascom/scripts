#!/bin/bash

a=( 3     10     15     32     50     75      100 )
b=( 41040 136590 206550 448140 706500 1026000 1512000 )
c=( 1000  6500   16500  56000  270000 500000  700000  1200000 1400000 )
d=( 2780  13024  37760  142400 573000 1017000 1485000 2600000 3120000 )

function compute() {
    if [[ "$1" == DEF ]]
    then
        local m=( "${b[@]}" )
        local n=( "${a[@]}" )
        local LIMIT=${#a[@]}
        for ((k=0; k < $LIMIT ; k++))
        do
            local n1[$k]=`expr ${n[$k]}`
        done
    else
        local LIMIT=${#c[@]}
        local m=( "${d[@]}" )
        local n=( "${c[@]}" )
        local n1=( "${c[@]}" )
        for ((k=0; k < $LIMIT ; k++))
        do
            local m[$k]=`expr ${m[$k]} \* 1000`
        done
    fi


    for ((k=0; k < $LIMIT ; k++))
    do
        local PRE[$k]=`expr "${m[$k]}" / "${n1[$k]}"`
    done

    local MIN_PRE=${PRE[0]}

    for ((k=1; k < $LIMIT ; k++))
    do
        if [ ${PRE[$k]} -lt $MIN_PRE ]
        then
            MIN_PRE=${PRE[$k]}
        fi
    done

    for ((k=0; k < $LIMIT ; k++))
    do
        if [ $MIN_PRE -eq ${PRE[$k]} ]
        then
            echo -e "$1: ${n[$k]} \tPrice ${m[$k]} \t P ${PRE[$k]}"
            local K_MIN=$k
        fi
    done

    if [ $K_MIN -eq "0" ]
    then
        local MIN_POS=${PRE[1]}
    else
        local MIN_POS=${PRE[0]}
    fi

    for ((k=0; k < $LIMIT ; k++))
    do
        if [ $k -ne $K_MIN ]
        then
            if [ ${PRE[$k]} -lt $MIN_POS ]
            then
                MIN_POS=${PRE[$k]}
            fi
        fi
    done

    for ((k=0; k < $LIMIT ; k++))
    do
        if [ $MIN_POS -eq ${PRE[$k]} ]
        then
            echo -e "Second: ${n[$k]} \tPrice ${m[$k]} \t P ${PRE[$k]}"
        fi
    done
}

compute DEF

compute POW
